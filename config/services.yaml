# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Sonata Admin
    admin.issue:
        class: App\Admin\IssueAdmin
        arguments: [~, App\Entity\Issue, ~]
        tags:
            - { group: 'Manage', icon: '<i class="fa fa-wrench"></i>', name: sonata.admin, manager_type: orm, label: Issues, keep_open: true }
    admin.volume:
        class: App\Admin\VolumeAdmin
        arguments: [~, App\Entity\Volume, ~]
        calls:
            - [setTemplate, ['show', 'Admin/display_volume.html.twig']]
        tags:
            - { group: 'Manage', icon: '<i class="fa fa-wrench"></i>', name: sonata.admin, manager_type: orm, label: Volumes, keep_open: true }
    admin.article:
        class: App\Admin\ArticleAdmin
        arguments: [~, App\Entity\Article, ~]
        tags:
            - { group: 'Manage', icon: '<i class="fa fa-wrench"></i>', name: sonata.admin, manager_type: orm, label: Articles, keep_open: true }
    admin.image:
        class: App\Admin\ImageAdmin
        arguments: [~, App\Entity\Image, ~]
        tags:
            - { group: 'Manage', icon: '<i class="fa fa-wrench"></i>', name: sonata.admin, manager_type: orm, label: Images, keep_open: true }
